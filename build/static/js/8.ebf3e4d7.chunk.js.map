{"version":3,"sources":["components/header/TopMessage.js"],"names":["memo","isTopMsgVisible","setIsTopMsgVisible","setHeaderPosTop","setBodyMarginTop","useState","offerText","undefined","secText","linkText","link","topMessage","setTopMessage","topMsgClass","fetchData","a","axios","get","baseUrl","response","console","log","data","useEffect","className","color","Colors","highlightColor","width","to","onClick"],"mappings":"wNA0GeA,0BA/FI,SAAC,GAKb,IAJLC,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,iBACI,EAEgCC,mBAAS,CAC3CC,eAAWC,EACXC,aAASD,EACTE,cAAUF,EACVG,KAAM,MANJ,mBAEGC,EAFH,KAEeC,EAFf,KASIN,EAAuCK,EAAvCL,UAAWE,EAA4BG,EAA5BH,QAASC,EAAmBE,EAAnBF,SAAUC,EAASC,EAATD,KAGlCG,EAAcZ,EACd,+DACA,MAiBEa,EAAS,uCAAG,4BAAAC,EAAA,+EAEOC,IAAMC,IACzBC,gEAHY,OAEVC,EAFU,OAKdC,QAAQC,IAAI,sCAAuCF,GAEnDP,GAAc,WACZ,MAAO,CACLN,UAAWa,EAASG,KAAKhB,UACzBE,QAASW,EAASG,KAAKd,QACvBC,SAAUU,EAASG,KAAKb,SACxBC,KAAMS,EAASG,KAAKZ,SAZV,gDAgBdU,QAAQC,IAAI,wCAAZ,MAhBc,yDAAH,qDAyBf,OAJAE,qBAAU,WACRT,MACC,IAGD,yBAAKU,UAAWX,GACd,yBAAKW,UAAU,4BACb,kBAAC,gBAAD,CAAeC,MAAOC,IAAgBC,eAAgBD,KACpD,uBAAGF,UAAU,iCACb,8BACE,gCAASlB,GAAa,kBAAC,IAAD,CAAUsB,MAAO,OADzC,IAC4DpB,GAE5D,kBAAC,IAAD,CACEqB,GAAInB,EACJc,UAAU,+CAETf,GAEH,4BACEe,UAAU,uEACVM,QAxDc,WACtB5B,GAAmB,WACjB,OAAO,KAETC,GAAgB,WACd,MAAO,SAETC,GAAiB,WACf,MAAO,YAkDD,uBAAGoB,UAAU","file":"static/js/8.ebf3e4d7.chunk.js","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport \"../../styles/styles.css\";\n\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nimport * as Colors from \"../../constants/Colors\";\n\nconst TopMessage = ({\n  isTopMsgVisible,\n  setIsTopMsgVisible,\n  setHeaderPosTop,\n  setBodyMarginTop,\n}) => {\n  // state management\n  const [topMessage, setTopMessage] = useState({\n    offerText: undefined,\n    secText: undefined,\n    linkText: undefined,\n    link: \"/\",\n  });\n  // destructuring props\n  const { offerText, secText, linkText, link } = topMessage;\n\n  // closeTopMessage - top msg visiblity\n  let topMsgClass = isTopMsgVisible\n    ? \"top_msg w-100 fc fsxs bg_white fc_pri pos_rel no_wrap sb-hid\"\n    : \"hid\";\n\n  const closeTopMessage = () => {\n    setIsTopMsgVisible(() => {\n      return false;\n    });\n    setHeaderPosTop(() => {\n      return \"0px\";\n    });\n    setBodyMarginTop(() => {\n      return \"48px\";\n    });\n  };\n\n  // fetchData - data fetching and setting state\n  const baseUrl = \"https://run.mocky.io\";\n\n  const fetchData = async () => {\n    try {\n      let response = await axios.get(\n        baseUrl + \"/v3/56013304-21d4-4d49-b53f-09e74de9bd83\"\n      );\n      console.log(\"Top Message data fetch successful: \", response);\n\n      setTopMessage(() => {\n        return {\n          offerText: response.data.offerText,\n          secText: response.data.secText,\n          linkText: response.data.linkText,\n          link: response.data.link,\n        };\n      });\n    } catch (error) {\n      console.log(\"Top msg data fetching failed. Error: \", error);\n    }\n  };\n\n  // useEffect - called once per render\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className={topMsgClass}>\n      <div className=\"mar-0-auto of-scr sb-hid\">\n        <SkeletonTheme color={Colors.pri_col} highlightColor={Colors.white}>\n          <i className=\"fas fa-crown mar_l-4 mar_r-8\"></i>\n          <span>\n            <strong>{offerText || <Skeleton width={320} />}</strong> {secText}\n          </span>\n          <Link\n            to={link}\n            className=\"mar_l-4 link-active fwb link_foc_u mar_r-24\"\n          >\n            {linkText}\n          </Link>\n          <button\n            className=\"btn bg_white fc_33 pos_abs-0-0-r h-100 pad_0-8 cur foc_btn_icon_op-1\"\n            onClick={closeTopMessage}\n          >\n            <i className=\"w-100 fcc h-100 fas fa-times op-5\"></i>\n          </button>\n        </SkeletonTheme>\n      </div>\n    </div>\n  );\n};\n\n// defining propTypes\nTopMessage.propTypes = {\n  offerText: PropTypes.string,\n  secText: PropTypes.string,\n  linkText: PropTypes.string,\n  link: PropTypes.string,\n};\n\nexport default memo(TopMessage);\n"],"sourceRoot":""}